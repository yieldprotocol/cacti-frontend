"use strict";(self.webpackChunkchatweb3_frontend=self.webpackChunkchatweb3_frontend||[]).push([[304],{"./src/components/cactiComponents/DoubleLineResponse.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>DoubleLineResponse_stories});var _Primary$parameters,_Primary$parameters2,_Primary$parameters2$,defineProperty=__webpack_require__("./node_modules/@storybook/nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react=__webpack_require__("./node_modules/react/index.js"),SkeletonWrap=__webpack_require__("./src/components/SkeletonWrap.tsx"),utils=__webpack_require__("./src/utils/index.tsx"),InlineChip=__webpack_require__("./src/components/cactiComponents/InlineChip.tsx"),cactiLayout=__webpack_require__("./src/components/cactiComponents/helpers/cactiLayout.tsx"),__jsx=react.createElement,DoubleLineResponse=function DoubleLineResponse(props){var _useState=(0,react.useState)(),token=_useState[0],setToken=_useState[1],_useState2=(0,react.useState)(props.tokenUsd),tokenValueInUsd=_useState2[0],setTokenValueInUsd=_useState2[1],_useState3=(0,react.useState)(props.amount),amount=_useState3[0],setAmount=_useState3[1],_useState4=(0,react.useState)(props.amountUsd),amountValueInUsd=_useState4[0],setAmountValueInUsd=_useState4[1];return(0,react.useMemo)((function(){if(props.tokenSymbol)try{var _token=(0,utils.y5)(props.tokenSymbol,1);setToken(_token)}catch(e){setToken(void 0)}setAmount(props.amount),setAmountValueInUsd(props.amountValueInUsd),setTokenValueInUsd(props.tokenValueInUsd)}),[props]),__jsx(cactiLayout.Uw,null,__jsx("div",null,token&&__jsx("div",{className:"flex items-center justify-between gap-[8px]"},__jsx("div",{className:"text-start"},__jsx("div",null,__jsx(InlineChip.p,{label:null==token?void 0:token.symbol,image:null==token?void 0:token.logoURI})),__jsx("div",{className:"p-1"},"$ ",tokenValueInUsd||__jsx(SkeletonWrap.Z,{width:50}))),__jsx("div",{className:"text-end"},__jsx("div",{className:"text-xl "},amount||__jsx(SkeletonWrap.Z,{width:50})),__jsx("div",{className:"p-1"},"$ ",amountValueInUsd||__jsx(SkeletonWrap.Z,{width:50}))))))};DoubleLineResponse.displayName="DoubleLineResponse",DoubleLineResponse.__docgenInfo={description:"Dual Line Response Elements are generally used for swap, trading etc. interfaces where user wants to get addtional information about a market, or token.  \nIncludes:\nChip\nPrice of Token in $\nUser Amount\nUser Amount in $",methods:[],displayName:"DoubleLineResponse"};try{DoubleLineResponse.displayName="DoubleLineResponse",DoubleLineResponse.__docgenInfo={description:"Dual Line Response Elements are generally used for swap, trading etc. interfaces where user wants to get addtional information about a market, or token.  \nIncludes:\nChip\nPrice of Token in $\nUser Amount\nUser Amount in $",displayName:"DoubleLineResponse",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/cactiComponents/DoubleLineResponse.tsx#DoubleLineResponse"]={docgenInfo:DoubleLineResponse.__docgenInfo,name:"DoubleLineResponse",path:"src/components/cactiComponents/DoubleLineResponse.tsx#DoubleLineResponse"})}catch(__react_docgen_typescript_loader_error){}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,defineProperty.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}const DoubleLineResponse_stories={title:"cacti/DoubleLineResponse",component:DoubleLineResponse,tags:["autodocs"],argTypes:{tokenSymbol:{description:"Token associated with this component.",default:"ETH",control:"text"},tokenValueInUsd:{description:"Numeric Value to display.",default:void 0,control:"number"},amount:{description:"Numeric Value to display.",default:void 0,control:"number"},amountValueInUsd:{description:"Numeric Value to display.",default:void 0,control:"number"}}};var Primary={args:{tokenSymbol:"DAI",tokenUsd:1.01,amount:100.67,amountUsd:99.03},parameters:{design:{type:"figma",url:"https://www.figma.com/file/UraHvlIzwoXoOYjcIir9f7/Web3-GPT-UI-(Shared)?type=design&node-id=1-1174&t=XvvkglkHNSvIhPmB-4"}}};Primary.parameters=_objectSpread(_objectSpread({},Primary.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Primary$parameters=Primary.parameters)||void 0===_Primary$parameters?void 0:_Primary$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    tokenSymbol: 'DAI',\n    tokenUsd: 1.01,\n    amount: 100.67,\n    amountUsd: 99.03\n  }\n}"},null===(_Primary$parameters2=Primary.parameters)||void 0===_Primary$parameters2||null===(_Primary$parameters2$=_Primary$parameters2.docs)||void 0===_Primary$parameters2$?void 0:_Primary$parameters2$.source)})})}}]);